// Copyright (c) 2019 RRZE, University Erlangen-Nuremberg
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// WARNING: This file has automatically been generated on Sun, 29 May 2022 03:45:36 CEST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package rocm_smi

/*
#cgo LDFLAGS: -Wl,--unresolved-symbols=ignore-in-object-files
#cgo CFLAGS:
#include <stdlib.h>
#include <stdint.h>
#include <unistd.h>
#include "rocm_smi/rocm_smi.h"
#include "rocm_smi/kfd_ioctl.h"
#include "rocm_smi/rocm_smi_helpers.h"
#include "cgo_helpers.h"
*/
import "C"

const (
	// MAX_NUM_FREQUENCIES as defined in rocm_smi/rocm_smi.h:73
	MAX_NUM_FREQUENCIES = 32
	// MAX_FAN_SPEED as defined in rocm_smi/rocm_smi.h:77
	MAX_FAN_SPEED = 255
	// NUM_VOLTAGE_CURVE_POINTS as defined in rocm_smi/rocm_smi.h:80
	NUM_VOLTAGE_CURVE_POINTS = 3
	// GPU_METRICS_API_FORMAT_VER as defined in rocm_smi/rocm_smi.h:834
	GPU_METRICS_API_FORMAT_VER = 1
	// GPU_METRICS_API_CONTENT_VER_1 as defined in rocm_smi/rocm_smi.h:837
	GPU_METRICS_API_CONTENT_VER_1 = 1
	// GPU_METRICS_API_CONTENT_VER_2 as defined in rocm_smi/rocm_smi.h:838
	GPU_METRICS_API_CONTENT_VER_2 = 2
	// GPU_METRICS_API_CONTENT_VER_3 as defined in rocm_smi/rocm_smi.h:839
	GPU_METRICS_API_CONTENT_VER_3 = 3
	// NUM_HBM_INSTANCES as defined in rocm_smi/rocm_smi.h:842
	NUM_HBM_INSTANCES = 4
	// DEFAULT_VARIANT as defined in rocm_smi/rocm_smi.h:935
	DEFAULT_VARIANT = 18446744073709551615
	// HELPER_MAX_NAME_LEN as defined in rocm_smi/rocm_smi_helpers.h:7
	HELPER_MAX_NAME_LEN = 200
	// HELPER_MAX_FUNCTIONS as defined in rocm_smi/rocm_smi_helpers.h:8
	HELPER_MAX_FUNCTIONS = 300
	// HELPER_MAX_SENSORS as defined in rocm_smi/rocm_smi_helpers.h:9
	HELPER_MAX_SENSORS = 30
	// HELPER_MAX_VARIANTS as defined in rocm_smi/rocm_smi_helpers.h:10
	HELPER_MAX_VARIANTS = 100
)

// RSMI_IO_LINK_TYPE as declared in rocm_smi/rocm_smi.h:621
type RSMI_IO_LINK_TYPE int32

// RSMI_IO_LINK_TYPE enumeration from rocm_smi/rocm_smi.h:621
const (
	IOLINK_TYPE_UNDEFINED      RSMI_IO_LINK_TYPE = iota
	IOLINK_TYPE_PCIEXPRESS     RSMI_IO_LINK_TYPE = 1
	IOLINK_TYPE_XGMI           RSMI_IO_LINK_TYPE = 2
	IOLINK_TYPE_NUMIOLINKTYPES RSMI_IO_LINK_TYPE = 3
	IOLINK_TYPE_SIZE           RSMI_IO_LINK_TYPE = -1
)

// RSMI_status as declared in rocm_smi/rocm_smi.h:131
type RSMI_status int32

// RSMI_status enumeration from rocm_smi/rocm_smi.h:131
const (
	STATUS_SUCCESS             RSMI_status = iota
	STATUS_INVALID_ARGS        RSMI_status = 1
	STATUS_NOT_SUPPORTED       RSMI_status = 2
	STATUS_FILE_ERROR          RSMI_status = 3
	STATUS_PERMISSION          RSMI_status = 4
	STATUS_OUT_OF_RESOURCES    RSMI_status = 5
	STATUS_INTERNAL_EXCEPTION  RSMI_status = 6
	STATUS_INPUT_OUT_OF_BOUNDS RSMI_status = 7
	STATUS_INIT_ERROR          RSMI_status = 8
	INITIALIZATION_ERROR       RSMI_status = 8
	STATUS_NOT_YET_IMPLEMENTED RSMI_status = 9
	STATUS_NOT_FOUND           RSMI_status = 10
	STATUS_INSUFFICIENT_SIZE   RSMI_status = 11
	STATUS_INTERRUPT           RSMI_status = 12
	STATUS_UNEXPECTED_SIZE     RSMI_status = 13
	STATUS_NO_DATA             RSMI_status = 14
	STATUS_UNEXPECTED_DATA     RSMI_status = 15
	STATUS_BUSY                RSMI_status = 16
	STATUS_REFCOUNT_OVERFLOW   RSMI_status = 17
	STATUS_UNKNOWN_ERROR       RSMI_status = -1
)

// RSMI_init_flags as declared in rocm_smi/rocm_smi.h:147
type RSMI_init_flags int32

// RSMI_init_flags enumeration from rocm_smi/rocm_smi.h:147
const (
	INIT_FLAG_ALL_GPUS    RSMI_init_flags = 1
	INIT_FLAG_RESRV_TEST1 RSMI_init_flags = 0
)

// RSMI_dev_perf_level as declared in rocm_smi/rocm_smi.h:176
type RSMI_dev_perf_level int32

// RSMI_dev_perf_level enumeration from rocm_smi/rocm_smi.h:176
const (
	DEV_PERF_LEVEL_AUTO            RSMI_dev_perf_level = iota
	DEV_PERF_LEVEL_FIRST           RSMI_dev_perf_level = 0
	DEV_PERF_LEVEL_LOW             RSMI_dev_perf_level = 1
	DEV_PERF_LEVEL_HIGH            RSMI_dev_perf_level = 2
	DEV_PERF_LEVEL_MANUAL          RSMI_dev_perf_level = 3
	DEV_PERF_LEVEL_STABLE_STD      RSMI_dev_perf_level = 4
	DEV_PERF_LEVEL_STABLE_PEAK     RSMI_dev_perf_level = 5
	DEV_PERF_LEVEL_STABLE_MIN_MCLK RSMI_dev_perf_level = 6
	DEV_PERF_LEVEL_STABLE_MIN_SCLK RSMI_dev_perf_level = 7
	DEV_PERF_LEVEL_DETERMINISM     RSMI_dev_perf_level = 8
	DEV_PERF_LEVEL_LAST            RSMI_dev_perf_level = 8
	DEV_PERF_LEVEL_UNKNOWN         RSMI_dev_perf_level = 256
)

// RSMI_sw_component as declared in rocm_smi/rocm_smi.h:191
type RSMI_sw_component int32

// RSMI_sw_component enumeration from rocm_smi/rocm_smi.h:191
const (
	SW_COMP_FIRST  RSMI_sw_component = iota
	SW_COMP_DRIVER RSMI_sw_component = 0
	SW_COMP_LAST   RSMI_sw_component = 0
)

// RSMI_event_group as declared in rocm_smi/rocm_smi.h:212
type RSMI_event_group int32

// RSMI_event_group enumeration from rocm_smi/rocm_smi.h:212
const (
	EVNT_GRP_XGMI          RSMI_event_group = iota
	EVNT_GRP_XGMI_DATA_OUT RSMI_event_group = 10
	EVNT_GRP_INVALID       RSMI_event_group = -1
)

// RSMI_event_type as declared in rocm_smi/rocm_smi.h:281
type RSMI_event_type int32

// RSMI_event_type enumeration from rocm_smi/rocm_smi.h:281
const (
	EVNT_FIRST               RSMI_event_type = iota
	EVNT_XGMI_FIRST          RSMI_event_type = 0
	EVNT_XGMI_0_NOP_TX       RSMI_event_type = 0
	EVNT_XGMI_0_REQUEST_TX   RSMI_event_type = 1
	EVNT_XGMI_0_RESPONSE_TX  RSMI_event_type = 2
	EVNT_XGMI_0_BEATS_TX     RSMI_event_type = 3
	EVNT_XGMI_1_NOP_TX       RSMI_event_type = 4
	EVNT_XGMI_1_REQUEST_TX   RSMI_event_type = 5
	EVNT_XGMI_1_RESPONSE_TX  RSMI_event_type = 6
	EVNT_XGMI_1_BEATS_TX     RSMI_event_type = 7
	EVNT_XGMI_LAST           RSMI_event_type = 7
	EVNT_XGMI_DATA_OUT_FIRST RSMI_event_type = 10
	EVNT_XGMI_DATA_OUT_0     RSMI_event_type = 10
	EVNT_XGMI_DATA_OUT_1     RSMI_event_type = 11
	EVNT_XGMI_DATA_OUT_2     RSMI_event_type = 12
	EVNT_XGMI_DATA_OUT_3     RSMI_event_type = 13
	EVNT_XGMI_DATA_OUT_4     RSMI_event_type = 14
	EVNT_XGMI_DATA_OUT_5     RSMI_event_type = 15
	EVNT_XGMI_DATA_OUT_LAST  RSMI_event_type = 15
	EVNT_LAST                RSMI_event_type = 15
)

// RSMI_counter_command as declared in rocm_smi/rocm_smi.h:290
type RSMI_counter_command int32

// RSMI_counter_command enumeration from rocm_smi/rocm_smi.h:290
const (
	CNTR_CMD_START RSMI_counter_command = iota
	CNTR_CMD_STOP  RSMI_counter_command = 1
)

// RSMI_evt_notification_type as declared in rocm_smi/rocm_smi.h:314
type RSMI_evt_notification_type int32

// RSMI_evt_notification_type enumeration from rocm_smi/rocm_smi.h:314
const (
	EVT_NOTIF_VMFAULT          RSMI_evt_notification_type = 1
	EVT_NOTIF_FIRST            RSMI_evt_notification_type = 1
	EVT_NOTIF_THERMAL_THROTTLE RSMI_evt_notification_type = 2
	EVT_NOTIF_GPU_PRE_RESET    RSMI_evt_notification_type = 3
	EVT_NOTIF_GPU_POST_RESET   RSMI_evt_notification_type = 4
	EVT_NOTIF_LAST             RSMI_evt_notification_type = 4
)

// RSMI_clk_type as declared in rocm_smi/rocm_smi.h:351
type RSMI_clk_type int32

// RSMI_clk_type enumeration from rocm_smi/rocm_smi.h:351
const (
	CLK_TYPE_SYS   RSMI_clk_type = iota
	CLK_TYPE_FIRST RSMI_clk_type = 0
	CLK_TYPE_DF    RSMI_clk_type = 1
	CLK_TYPE_DCEF  RSMI_clk_type = 2
	CLK_TYPE_SOC   RSMI_clk_type = 3
	CLK_TYPE_MEM   RSMI_clk_type = 4
	CLK_TYPE_LAST  RSMI_clk_type = 4
	CLK_INVALID    RSMI_clk_type = -1
)

// RSMI_temperature_metric as declared in rocm_smi/rocm_smi.h:397
type RSMI_temperature_metric int32

// RSMI_temperature_metric enumeration from rocm_smi/rocm_smi.h:397
const (
	TEMP_CURRENT        RSMI_temperature_metric = iota
	TEMP_FIRST          RSMI_temperature_metric = 0
	TEMP_MAX            RSMI_temperature_metric = 1
	TEMP_MIN            RSMI_temperature_metric = 2
	TEMP_MAX_HYST       RSMI_temperature_metric = 3
	TEMP_MIN_HYST       RSMI_temperature_metric = 4
	TEMP_CRITICAL       RSMI_temperature_metric = 5
	TEMP_CRITICAL_HYST  RSMI_temperature_metric = 6
	TEMP_EMERGENCY      RSMI_temperature_metric = 7
	TEMP_EMERGENCY_HYST RSMI_temperature_metric = 8
	TEMP_CRIT_MIN       RSMI_temperature_metric = 9
	TEMP_CRIT_MIN_HYST  RSMI_temperature_metric = 10
	TEMP_OFFSET         RSMI_temperature_metric = 11
	TEMP_LOWEST         RSMI_temperature_metric = 12
	TEMP_HIGHEST        RSMI_temperature_metric = 13
	TEMP_LAST           RSMI_temperature_metric = 13
)

// RSMI_temperature_type as declared in rocm_smi/rocm_smi.h:417
type RSMI_temperature_type int32

// RSMI_temperature_type enumeration from rocm_smi/rocm_smi.h:417
const (
	TEMP_TYPE_FIRST    RSMI_temperature_type = iota
	TEMP_TYPE_EDGE     RSMI_temperature_type = 0
	TEMP_TYPE_JUNCTION RSMI_temperature_type = 1
	TEMP_TYPE_MEMORY   RSMI_temperature_type = 2
	TEMP_TYPE_HBM_0    RSMI_temperature_type = 3
	TEMP_TYPE_HBM_1    RSMI_temperature_type = 4
	TEMP_TYPE_HBM_2    RSMI_temperature_type = 5
	TEMP_TYPE_HBM_3    RSMI_temperature_type = 6
	TEMP_TYPE_LAST     RSMI_temperature_type = 6
	TEMP_TYPE_INVALID  RSMI_temperature_type = -1
)

// RSMI_voltage_metric as declared in rocm_smi/rocm_smi.h:437
type RSMI_voltage_metric int32

// RSMI_voltage_metric enumeration from rocm_smi/rocm_smi.h:437
const (
	VOLT_CURRENT  RSMI_voltage_metric = iota
	VOLT_FIRST    RSMI_voltage_metric = 0
	VOLT_MAX      RSMI_voltage_metric = 1
	VOLT_MIN_CRIT RSMI_voltage_metric = 2
	VOLT_MIN      RSMI_voltage_metric = 3
	VOLT_MAX_CRIT RSMI_voltage_metric = 4
	VOLT_AVERAGE  RSMI_voltage_metric = 5
	VOLT_LOWEST   RSMI_voltage_metric = 6
	VOLT_HIGHEST  RSMI_voltage_metric = 7
	VOLT_LAST     RSMI_voltage_metric = 7
)

// RSMI_voltage_type as declared in rocm_smi/rocm_smi.h:450
type RSMI_voltage_type int32

// RSMI_voltage_type enumeration from rocm_smi/rocm_smi.h:450
const (
	VOLT_TYPE_FIRST   RSMI_voltage_type = iota
	VOLT_TYPE_VDDGFX  RSMI_voltage_type = 0
	VOLT_TYPE_LAST    RSMI_voltage_type = 0
	VOLT_TYPE_INVALID RSMI_voltage_type = -1
)

// RSMI_power_profile_preset_masks as declared in rocm_smi/rocm_smi.h:474
type RSMI_power_profile_preset_masks int32

// RSMI_power_profile_preset_masks enumeration from rocm_smi/rocm_smi.h:474
const (
	PWR_PROF_PRST_CUSTOM_MASK       RSMI_power_profile_preset_masks = 1
	PWR_PROF_PRST_VIDEO_MASK        RSMI_power_profile_preset_masks = 2
	PWR_PROF_PRST_POWER_SAVING_MASK RSMI_power_profile_preset_masks = 4
	PWR_PROF_PRST_COMPUTE_MASK      RSMI_power_profile_preset_masks = 8
	PWR_PROF_PRST_VR_MASK           RSMI_power_profile_preset_masks = 16
	PWR_PROF_PRST_3D_FULL_SCR_MASK  RSMI_power_profile_preset_masks = 32
	PWR_PROF_PRST_BOOTUP_DEFAULT    RSMI_power_profile_preset_masks = 64
	PWR_PROF_PRST_LAST              RSMI_power_profile_preset_masks = 64
	PWR_PROF_PRST_INVALID           RSMI_power_profile_preset_masks = -1
)

// RSMI_gpu_block as declared in rocm_smi/rocm_smi.h:505
type RSMI_gpu_block int32

// RSMI_gpu_block enumeration from rocm_smi/rocm_smi.h:505
const (
	GPU_BLOCK_INVALID   RSMI_gpu_block = iota
	GPU_BLOCK_FIRST     RSMI_gpu_block = 1
	GPU_BLOCK_UMC       RSMI_gpu_block = 1
	GPU_BLOCK_SDMA      RSMI_gpu_block = 2
	GPU_BLOCK_GFX       RSMI_gpu_block = 4
	GPU_BLOCK_MMHUB     RSMI_gpu_block = 8
	GPU_BLOCK_ATHUB     RSMI_gpu_block = 16
	GPU_BLOCK_PCIE_BIF  RSMI_gpu_block = 32
	GPU_BLOCK_HDP       RSMI_gpu_block = 64
	GPU_BLOCK_XGMI_WAFL RSMI_gpu_block = 128
	GPU_BLOCK_DF        RSMI_gpu_block = 256
	GPU_BLOCK_SMN       RSMI_gpu_block = 512
	GPU_BLOCK_SEM       RSMI_gpu_block = 1024
	GPU_BLOCK_MP0       RSMI_gpu_block = 2048
	GPU_BLOCK_MP1       RSMI_gpu_block = 4096
	GPU_BLOCK_FUSE      RSMI_gpu_block = 8192
	GPU_BLOCK_LAST      RSMI_gpu_block = 8192
	GPU_BLOCK_RESERVED  RSMI_gpu_block = 0
)

// RSMI_ras_err_state as declared in rocm_smi/rocm_smi.h:523
type RSMI_ras_err_state int32

// RSMI_ras_err_state enumeration from rocm_smi/rocm_smi.h:523
const (
	RAS_ERR_STATE_NONE     RSMI_ras_err_state = iota
	RAS_ERR_STATE_DISABLED RSMI_ras_err_state = 1
	RAS_ERR_STATE_PARITY   RSMI_ras_err_state = 2
	RAS_ERR_STATE_SING_C   RSMI_ras_err_state = 3
	RAS_ERR_STATE_MULT_UC  RSMI_ras_err_state = 4
	RAS_ERR_STATE_POISON   RSMI_ras_err_state = 5
	RAS_ERR_STATE_ENABLED  RSMI_ras_err_state = 6
	RAS_ERR_STATE_LAST     RSMI_ras_err_state = 6
	RAS_ERR_STATE_INVALID  RSMI_ras_err_state = -1
)

// RSMI_memory_type as declared in rocm_smi/rocm_smi.h:536
type RSMI_memory_type int32

// RSMI_memory_type enumeration from rocm_smi/rocm_smi.h:536
const (
	MEM_TYPE_FIRST    RSMI_memory_type = iota
	MEM_TYPE_VRAM     RSMI_memory_type = 0
	MEM_TYPE_VIS_VRAM RSMI_memory_type = 1
	MEM_TYPE_GTT      RSMI_memory_type = 2
	MEM_TYPE_LAST     RSMI_memory_type = 2
)

// RSMI_freq_ind as declared in rocm_smi/rocm_smi.h:547
type RSMI_freq_ind int32

// RSMI_freq_ind enumeration from rocm_smi/rocm_smi.h:547
const (
	FREQ_IND_MIN     RSMI_freq_ind = iota
	FREQ_IND_MAX     RSMI_freq_ind = 1
	FREQ_IND_INVALID RSMI_freq_ind = -1
)

// RSMI_fw_block as declared in rocm_smi/rocm_smi.h:581
type RSMI_fw_block int32

// RSMI_fw_block enumeration from rocm_smi/rocm_smi.h:581
const (
	FW_BLOCK_FIRST    RSMI_fw_block = iota
	FW_BLOCK_ASD      RSMI_fw_block = 0
	FW_BLOCK_CE       RSMI_fw_block = 1
	FW_BLOCK_DMCU     RSMI_fw_block = 2
	FW_BLOCK_MC       RSMI_fw_block = 3
	FW_BLOCK_ME       RSMI_fw_block = 4
	FW_BLOCK_MEC      RSMI_fw_block = 5
	FW_BLOCK_MEC2     RSMI_fw_block = 6
	FW_BLOCK_PFP      RSMI_fw_block = 7
	FW_BLOCK_RLC      RSMI_fw_block = 8
	FW_BLOCK_RLC_SRLC RSMI_fw_block = 9
	FW_BLOCK_RLC_SRLG RSMI_fw_block = 10
	FW_BLOCK_RLC_SRLS RSMI_fw_block = 11
	FW_BLOCK_SDMA     RSMI_fw_block = 12
	FW_BLOCK_SDMA2    RSMI_fw_block = 13
	FW_BLOCK_SMC      RSMI_fw_block = 14
	FW_BLOCK_SOS      RSMI_fw_block = 15
	FW_BLOCK_TA_RAS   RSMI_fw_block = 16
	FW_BLOCK_TA_XGMI  RSMI_fw_block = 17
	FW_BLOCK_UVD      RSMI_fw_block = 18
	FW_BLOCK_VCE      RSMI_fw_block = 19
	FW_BLOCK_VCN      RSMI_fw_block = 20
	FW_BLOCK_LAST     RSMI_fw_block = 20
)

// RSMI_xgmi_status as declared in rocm_smi/rocm_smi.h:590
type RSMI_xgmi_status int32

// RSMI_xgmi_status enumeration from rocm_smi/rocm_smi.h:590
const (
	XGMI_STATUS_NO_ERRORS       RSMI_xgmi_status = iota
	XGMI_STATUS_ERROR           RSMI_xgmi_status = 1
	XGMI_STATUS_MULTIPLE_ERRORS RSMI_xgmi_status = 2
)

// RSMI_memory_page_status as declared in rocm_smi/rocm_smi.h:610
type RSMI_memory_page_status int32

// RSMI_memory_page_status enumeration from rocm_smi/rocm_smi.h:610
const (
	MEM_PAGE_STATUS_RESERVED     RSMI_memory_page_status = iota
	MEM_PAGE_STATUS_PENDING      RSMI_memory_page_status = 1
	MEM_PAGE_STATUS_UNRESERVABLE RSMI_memory_page_status = 2
)

// RSMI_UTILIZATION_COUNTER_TYPE as declared in rocm_smi/rocm_smi.h:632
type RSMI_UTILIZATION_COUNTER_TYPE int32

// RSMI_UTILIZATION_COUNTER_TYPE enumeration from rocm_smi/rocm_smi.h:632
const (
	UTILIZATION_COUNTER_FIRST RSMI_UTILIZATION_COUNTER_TYPE = iota
	COARSE_GRAIN_GFX_ACTIVITY RSMI_UTILIZATION_COUNTER_TYPE = 0
	COARSE_GRAIN_MEM_ACTIVITY RSMI_UTILIZATION_COUNTER_TYPE = 1
	UTILIZATION_COUNTER_LAST  RSMI_UTILIZATION_COUNTER_TYPE = 1
)

// Kfd_smi_event as declared in rocm_smi/kfd_ioctl.h:544
type Kfd_smi_event int32

// Kfd_smi_event enumeration from rocm_smi/kfd_ioctl.h:544
const ()

// Kfd_mmio_remap as declared in rocm_smi/kfd_ioctl.h:561
type Kfd_mmio_remap int32

// Kfd_mmio_remap enumeration from rocm_smi/kfd_ioctl.h:561
const ()
